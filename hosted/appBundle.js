(()=>{var e={603:e=>{const t=e=>{document.getElementById("errorMessage").textContent=e,document.getElementById("domoMessage").classList.remove("hidden")};e.exports={handleError:t,sendPost:async(e,a,o)=>{const l=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),r=await l.json();document.getElementById("domoMessage").classList.add("hidden"),r.error&&t(r.error),r.redirect&&(window.location=r.redirect),o&&o(r)},hideError:()=>{document.getElementById("domoMessage").classList.add("hidden")}}}},t={};function a(o){var l=t[o];if(void 0!==l)return l.exports;var r=t[o]={exports:{}};return e[o](r,r.exports,a),r.exports}(()=>{const e=a(603),t=t=>{t.preventDefault(),e.hideError();const a=t.target.querySelector("#blogName").value,o=t.target.querySelector("#blogText").value,l=t.target.querySelector("#_csrf").value;return a&&o?(e.sendPost(t.target.action,{blogName:a,blogText:o,_csrf:l},r),!1):(e.handleError("All fields are required!"),!1)},o=e=>React.createElement("form",{id:"blogForm",onSubmit:t,name:"blogForm",action:"/maker",method:"POST",className:"blogForm"},React.createElement("label",{htmlFor:"blogName"},"Blog Name: "),React.createElement("input",{id:"blogName",type:"text",name:"blogName",placeholder:"Blog Name"}),React.createElement("label",{htmlFor:"blogText"},"Blog Text: "),React.createElement("input",{id:"blogText",type:"text",name:"blogText"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"makeBlogSubmit",type:"submit",value:"Make Blog"})),l=e=>{if(0===e.blog.length)return React.createElement("div",{className:"blogList"},React.createElement("h3",{className:"emptyBlog"},"No Blogs Yet!"));const t=e.blog.map((e=>React.createElement("div",{key:e._id,className:"blog"},React.createElement("img",{src:"/assets/img/domoface.jpeg",alt:"domo face",className:"domoFace"}),React.createElement("h3",{className:"blogName"}," Name: ",e.blogName," "),React.createElement("h3",{className:"blogText"}," Blog Text: ",e.blogText," "))));return React.createElement("div",{className:"blogList"},t)},r=async()=>{const e=await fetch("/getBlogs"),t=await e.json();ReactDOM.render(React.createElement(l,{blogs:t.blog}),document.getElementById("blogs"))};window.onload=async()=>{const e=await fetch("/getToken"),t=await e.json();ReactDOM.render(React.createElement(o,{csrf:t.csrfToken}),document.getElementById("makeBlog")),ReactDOM.render(React.createElement(l,{blogs:[]}),document.getElementById("blogs")),r()}})()})();